name: Release

on:
  push:
    branches: [main]
    paths: ["package.json"]

permissions:
  contents: write

jobs:
  check-version-change:
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      current-version: ${{ steps.check.outputs.current-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if version changed
        id: check
        run: |
          # Get current version
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Get previous version (from parent commit)
          git checkout HEAD~1 -- package.json 2>/dev/null || echo "No previous package.json"
          if [ -f package.json ]; then
            PREVIOUS_VERSION=$(node -p "require('./package.json').version" 2>/dev/null || echo "unknown")
            git checkout HEAD -- package.json
          else
            PREVIOUS_VERSION="unknown"
          fi
          echo "Previous version: $PREVIOUS_VERSION"

          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "Version unchanged"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

          echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

  release:
    needs: check-version-change
    if: needs.check-version-change.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Install Playwright browsers
        run: npx playwright install chromium firefox

      - name: Build Chrome extension
        run: npm run build

      - name: Run e2e tests (chrome)
        run: npm run test:e2e:headless

      - name: Prepare Chrome build
        run: mv dist dist-chrome

      - name: Build Firefox extension
        run: npm run build:firefox

      - name: Run e2e tests (firefox)
        run: npm run test:e2e:headless:firefox

      - name: Prepare Firefox build
        run: mv dist dist-firefox

      - name: Create extension archives
        run: |
          VERSION="${{ needs.check-version-change.outputs.current-version }}"
          cd dist-chrome
          zip -r ../extension-chrome-v${VERSION}.zip .
          cd ../dist-firefox
          zip -r ../extension-firefox-v${VERSION}.zip .
          cd ..

      - name: Check if tag exists
        id: check-tag
        run: |
          VERSION="v${{ needs.check-version-change.outputs.current-version }}"
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "tag-exists=true" >> $GITHUB_OUTPUT
          else
            echo "tag-exists=false" >> $GITHUB_OUTPUT
          fi
          echo "tag=$VERSION" >> $GITHUB_OUTPUT

      - name: Create Release
        if: steps.check-tag.outputs.tag-exists == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.check-tag.outputs.tag }}
          name: Extension ${{ steps.check-tag.outputs.tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            extension-chrome-${{ steps.check-tag.outputs.tag }}.zip
            extension-firefox-${{ steps.check-tag.outputs.tag }}.zip
          body: |
            üöÄ **Browser Extension Release ${{ steps.check-tag.outputs.tag }}**

            ## Installation

            ### Chrome/Edge
            1. Download the `extension-chrome-${{ steps.check-tag.outputs.tag }}.zip` file below
            2. Extract the contents to a folder
            3. Open Chrome/Edge and navigate to `chrome://extensions/` or `edge://extensions/`
            4. Enable "Developer mode"
            5. Click "Load unpacked" and select the extracted folder

            ### Firefox
            1. Download the `extension-firefox-${{ steps.check-tag.outputs.tag }}.zip` file below
            2. Extract the contents to a folder
            3. Open Firefox and navigate to `about:debugging`
            4. Click "This Firefox"
            5. Click "Load Temporary Add-on" and select the extracted folder

            ## What's Changed
            This release includes all changes merged since the previous version.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip release (tag exists)
        if: steps.check-tag.outputs.tag-exists == 'true'
        run: |
          echo "‚ö†Ô∏è Tag ${{ steps.check-tag.outputs.tag }} already exists. Skipping release creation."
